projects:

    garfield:
        name: Garfield
        description: >
            System Support for Byzantine Machine Learning
        contacts:
            - name: Arsany Guirguis
              email: arsany.guirguis@epfl.ch
        type: Library
        tech_desc: >
            Garfield is a library to build Byzantine machine learning
            (ML) applications on top of popular frameworks such as TensorFlow and PyTorch.
            We show how to use Garfield to build different architectures for ML applications like single server,
            multiple workers (SSMW), multiple servers, multiple
            workers (MSMW), and fully decentralized architecture.
        layman_desc: >
            Training ML is done in a distributed fashion these days due to the usage of big models and huge datasets
            (for scalability reasons). This distribution inevitably leads to a higher probability of failure somewhere
            in the network. Garfield is a library/tool to ensure the correctness/convergence of training despite the
            presence of these failures. Garfield can be used to do so with various ML applications and architectures.
        tags:
            - Machine Learning
            - ML
            - Byzantine
            - Federated Learning
            - TensorFlow
            - PyTorch
        code:
            type: Lab Github
            url:  https://github.com/LPD-EPFL/Garfield
            date_last_commit: 2021-02-04
        language: Pyton, Cuda, C++
        information:
            - type: Paper
              title: "Garfield: System Support for Byzantine Machine Learning"
              url: https://arxiv.org/abs/2010.05888
        date_added: 2021-01-20
        date_updated: 2021-02-09

    at2:
        name: AT2
        description: Asset Transfer System using lightweight broadcast-based primitives instead of consensus
        tech_desc: >
            We replace consensus with a lightweight building block -- a
            broadcast-based primitive -- to obtain a full-fledged asset transfer
            system (cryptocurrency). This system is more efficient and more
            scalable compared with Bitcoin and consensus-based solutions. AT2 is
            the first system to bypass consensus algorithms for implementing
            asset transfers.
        contacts:
            - name: Matteo Monti
              email: matteo.monti@epfl.ch
        code:
            type: Lab GitHub
            url: https://github.com/Distributed-EPFL
            date_last_commit: 2021-02-04
        maturity: 1
        tags:
            - Blockchain
            - Cryptocurrencies
            - Scalability
            - Decentralization
        type: Library
        language: Rust
        information:
            - type: Website
              url: https://dcl.epfl.ch/site/cryptocurrencies
              title: "Cryptocurrencies@EPFL"
            - type: Website
              url: https://dcl.epfl.ch/site/poc-at2_project
              title: "Low Cost Cryptocurrency"
            - type: Paper
              title: "Scalable Byzantine Reliable Broadcast"
              url: https://drops.dagstuhl.de/opus/volltexte/2019/11329/
            - type: Paper
              title: "Online Payments by Merely Broadcasting Messages"
              url: https://dcl.epfl.ch/site/_media/research/efficient_asset_transfer_winter_20_dsn_extended_version_.pdf
            - type: Paper
              title: "AT2: Asynchronous Trustworthy Transfers"
              url: https://arxiv.org/abs/1812.10844
            - type: Paper
              title: "The Consensus Number of a Cryptocurrency"
              url: https://arxiv.org/abs/1906.05574
              notes:
                  - label: Published at
                    text: PODC 2019
                    url: https://dl.acm.org/doi/10.1145/3293611.3331589
        date_added: 2019-03-18
        date_updated: 2021-02-09

    fegan:
        name: FeGAN
        description: Scaling Distributed GANs
        layman_desc: >
            The FeGAN system enables training GANs in the Federated Learning setup.
            GANs are generative adversarial networks, a class of machine learning
            where two neural networks contest with each other.
            FeGAN is implemented on PyTorch and is using less bandwidth and is
            faster than using stat-of-the-art GANs implementations.
        contacts:
            - name: Arsany Guirguis
              email: arsany.guirguis@epfl.ch
        code:
            type: Lab GitHub
            url:  https://github.com/LPD-EPFL/FeGAN
            date_last_commit: 2020-12-31
        maturity: 1
        tags:
            - Machine Learning
            - GAN
            - Federated ML
            - PyTorch
        type: Application
        language: Pyton
        information:
            - type: Paper
              title: "FeGAN: Scaling Distributed GANs"
              url: https://hal.archives-ouvertes.fr/hal-02953314
              notes:
                  - label: Published at
                    text: ACM/IFIP Middleware 2020
                    url: https://2020.middleware-conference.org
        date_added: 2020-11-11
        date_updated: 2021-02-09

    mvtil:
        name: MVTIL
        description: Multiversion Timestamp Locking (MVTL)
        layman_desc: >
            MVTL is a new family of concurrency control algorithms.
            Improving performance of distributed databases by allowing read
            accesses to lag behind the latest version of the data.
        contacts:
            - name: Rachid Guerraoui
              email: rachid.guerraoui@epfl.ch
        code:
            type: Lab GitHub
            url:  https://github.com/LPD-EPFL/MVTIL
            date_last_commit: 2019-09-19
        tags:
            - Database
            - Concurrency
        type: Application
        language: C++
        information:
            - type: Paper
              title: Locking Timestamps versus Locking Objects
              url: https://infoscience.epfl.ch/record/229425
              notes:
                  - label: Published at
                    text: PODC 2018
                    url: https://www.podc.org/podc2018
        date_added: 2019-09-19
        date_updated: 2021-02-09

    libnvram:
        name: libNVRAM
        description: Log-Free Concurrent Data Structures
        layman_desc: >
            Storing data structures in non-volatile RAM such that transient
            failures don't corrupt the data.
        url: http://dcl.epfl.ch/site/nvram
        contacts:
            - name: Rachid Guerraoui
              email: rachid.guerraoui@epfl.ch
        code:
            type: Lab Github
            url:  https://github.com/LPD-EPFL/nv-lf-structures
            date_last_commit: 2019-09-04
        tags:
            - NVRAM
            - Data Structures
            - Concurrency
            - Transient Failures
        type: Library, Application
        language: C++
        information:
            - type: Paper
              title: Log-Free Concurrent Data Structures
              url: https://www.usenix.org/system/files/conference/atc18/atc18-david.pdf
              notes:
                  - label: Published at
                    text: ATC 2018
                    url: https://www.usenix.org/conference/atc18/presentation/david
        date_added: 2019-03-18
        date_updated: 2021-02-09

    flodb:
        name: FloDB
        description:  Unlocking Memory in Persistent Key-Value Stores
        layman_desc: >
            High performance key-value store for servers with high amount of RAM
            and lots of CPUs.
        url: http://dcl.epfl.ch/site/flodb
        code:
            type: Lab GitHub
            url:  https://github.com/LPD-EPFL/flodb
            date_last_commit: 2017-03-28
        contacts:
            - name: Zablotchi Mihail Igor
              email: igor.zablotchi@epfl.ch
        tags:
            - Key-Value Store
            - Server
            - Database
        type: Application
        language: C++
        information:
            - type: Paper
              title: "FloDB: Unlocking Memory in Persistent Key-Value Stores"
              url: https://infoscience.epfl.ch/record/227333
              notes:
                  - label: Published at
                    text: EuroSys 2017
                    url: https://eurosys2017.github.io
        date_added: 2019-03-18
        date_updated: 2021-02-09

    fleet:
        name: FLeet
        description: Federated Machine Learning on Android
        layman_desc: >
            MobNet is a framework for federated machine learning on android
            devices. It consumes way less battery than Standard FL while
            increasing the model's accuracy three times. It allows for android
            to actually participate in the building of a ML model.
        contacts:
            - name: Georgios Damaskinos
              url: https://gdamaskinos.com
        code:
            type: Non-lab GitHub
            url: https://github.com/gdamaskinos/fleet
            date_last_commit: 2020-10-31
        tags:
            - Federated Learning
            - Android
            - Edge ML
        type: Library, Application
        language: Java
        maturity: 1
        information:
            - type: Paper
              title: "FLeet: Online Federated Learning via Staleness Awareness and Performance Prediction"
              url: https://arxiv.org/abs/2006.07273
              notes:
                  - label: Published at
                    text: ACM/IFIP Middleware 2020
                    url: https://2020.middleware-conference.org
        date_added: 2019-07-01
        date_updated: 2021-02-09

    mctop:
        name: MCTOP
        description: A Multi-Core Topology Abstraction
        layman_desc: >
          MCTOP is an abstraction of multi-core topologies augmented with
          important low-level hardware information, such as memory bandwidths
          and communication latencies.
        url: https://dcl.epfl.ch/site/mctop
        contacts:
            - name: Vasileios Trigonakis
              email: github@trigonakis.com
        code:
            type: Lab GitHub
            url: https://github.com/LPD-EPFL/mctop
            date_last_commit: 2017-05-04
        tags:
            - CPU topology
            - Multiprocessor
        type: Application
        language: C
        information:
            - type: Paper
              title: Abstracting Multi-Core Topologies with MCTOP
              url: https://infoscience.epfl.ch/record/227458
              notes:
                  - label: Published at
                    text: EuroSys 2017
                    url: https://eurosys2017.github.io
        date_added: 2019-07-26
        date_updated: 2021-02-09

    lockin:
        name: LOCKIN
        description: Automatically chose the best locking algorithm
        layman_desc: >
          GLS is a middleware that makes lock-based programming simple and
          effective. GLS offers the classic lock-unlock interface of locks.
          However, in contrast to classic lock libraries, GLS does not require
          any effort from the programmer for allocating and initializing locks,
          nor for selecting the appropriate locking strategy.
        url: https://dcl.epfl.ch/site/lockin
        contacts:
            - name: Rachid Guerraoui
              email: rachid.guerraoui@epfl.ch
        code:
            type: Lab GitHub
            url: https://github.com/LPD-EPFL/lockin
            date_last_commit: 2017-04-19
        tags:
            - Locking
        type: Library
        language: C/C++
        information:
            - type: Paper
              title: Unlocking Energy
              url: https://infoscience.epfl.ch/record/221135
              notes:
                  - label: Published at
                    text: ATC 2016
                    url: https://www.usenix.org/conference/atc16
            - type: Paper
              title: Locking Made Easy
              url: https://infoscience.epfl.ch/record/222954
              notes:
                  - label: Published at
                    text: ACM/IFIP Middleware 2016
                    url: http://2016.middleware-conference.org
        date_added: 2019-07-01
        date_updated: 2021-02-09

    aggregathor:
        name: AggregaThor
        description: Framework over TensorFlow implementing robust Stochastic Gradient Descent
        layman_desc: >
            Framework built over TensorFlow implementing state-of-the-art
            Byzantine-resilient, distributed Stochastic Gradient Descent (SGD).
            Modular approach allows most of its components to be reused in other
            projects. Unreliable communication channels are supported, providing
            a performance speed-up over standard TensorFlow in saturated
            networks.
        contacts:
            - name: Arsany Guirguis
              email: arsany.guirguis@epfl.ch
            - name: Georgios Damaskinos
              url: https://gdamaskinos.com/
        code:
            type: Lab GitHub
            url:  https://github.com/LPD-EPFL/AggregaThor
            date_last_commit: 2019-12-06
        tags:
            - Robust SGD
            - Distributed ML
            - Byzantine Resilience
            - Gradient Aggregation
            - TensorFlow
            - UDP
        type: Library, Application
        language: Python / C++
        information:
            - type: Paper
              url: https://infoscience.epfl.ch/record/265684
              title: "AGGREGATHOR: Byzantine Machine Learning via Robust Gradient Aggregation"
              notes:
                  - label: Published at
                    text: SysML 2019
                    url: https://mlsys.org/Conferences/2019
        date_added: 2019-03-18
        date_updated: 2021-02-09
